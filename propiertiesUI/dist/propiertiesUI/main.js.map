{"version":3,"sources":["./src/environments/environment.ts","./src/app/crud/home/home.component.html","./src/app/crud/home/home.component.ts","./src/app/crud/crud.service.ts","./src/app/crud/create/create.component.ts","./src/app/crud/create/create.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/crud/details/details.component.html","./src/app/crud/details/details.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container\">\n<h2>\n     Properties\n  </h2>\n  <nav class=\"navbar navbar-expand-sm bg-light navbar-dark\">\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n            <button routerLink=\"crud/create\"\n            class=\"m-1 btn btn-light btn-outline-primary\" Button>Create</button>\n        </li>\n    </ul>\n    </nav>\n  \n  <div *ngIf=\"! storeProperties.length\">There are no properties at the moment</div>\n  <div>\n    <article *ngFor=\"let storeProperties of storeProperties\">\n      <span>{{storeProperties.propertyId}}</span>\n      <span>{{storeProperties.propertyName}}</span>\n      <span> <button type=\"button\" routerLink=\"crud/details/{{storeProperties.propertyId}}\" class=\"btn btn-info\">Detail</button></span>\n         </article>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../crud.service';\nimport {StoreProperty} from '../store-property';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  storeProperties: StoreProperty[] = [];\n\n  constructor(public crudService: CrudService) { }\n\n  // tslint:disable-next-line: typedef\n  ngOnInit() {\n\n    this.crudService.getAll().subscribe((data: StoreProperty[]) => {\n      console.log(data);\n      this.storeProperties = data;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nimport {throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\nimport {StoreProperty} from '../crud/store-property';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n  private apiServer = 'https://serpropierties.azurewebsites.net/api/property';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n};\nconstructor(private httpClient: HttpClient) { }\n\n\ngetAll(): Observable<StoreProperty[]> {\n  return this.httpClient.get<StoreProperty[]>(this.apiServer + '/Getproperties/')\n  .pipe(catchError(this.errorHandler)\n  );\n}\n\ngetId(propertyId: any ): Observable<StoreProperty> {\n  return this.httpClient.get<StoreProperty>(this.apiServer + '/GetpropertyId/?propertyId='+ propertyId)\n  .pipe(catchError(this.errorHandler)\n  );\n}\n\ncreate(storeProperty: StoreProperty): Observable<StoreProperty> {\n  return this.httpClient.post<StoreProperty>(this.apiServer + '/PostAddPropierty/', JSON.stringify(storeProperty), this.httpOptions)\n  .pipe(\n    catchError(this.errorHandler)\n  );\n}\n\nupdate(storeProperty: StoreProperty): Observable<StoreProperty> {\n  return this.httpClient.post<StoreProperty>(this.apiServer + '/PostUpdatePropierty/', JSON.stringify(storeProperty), this.httpOptions)\n  .pipe(\n    catchError(this.errorHandler)\n  );\n}\n\ndelete(propertyId: any): Observable<StoreProperty> {\n  return this.httpClient.post<StoreProperty>(this.apiServer + '/PostDeletePropierty/?propertyId='+ propertyId , this.httpOptions)\n  .pipe(\n    catchError(this.errorHandler)\n  );\n}\n\n  errorHandler(errorHandler: any): import('rxjs').OperatorFunction<StoreProperty, any> {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CrudService } from '../crud.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent {\n  propiertyForm = this.formBuilder.group({\n    propertyName: [''],\n    propertyLocation: [''],\n    propertyOwner: [''],\n    propertyPrice: [''],\n  });\n  constructor(\n    private crudService: CrudService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  onSubmit(): void {\n    this.crudService.create(this.propiertyForm.value).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.router.navigate(['/home']);\n      },\n      (error: any) => {\n        console.log(error);\n      });\n  }\n}\n","<div>\n    <h4>Create</h4>\n    <form [formGroup]=\"propiertyForm\" (ngSubmit)=\"onSubmit()\">\n        <div >\n            <label>Name</label>\n            <input type=\"text\" formControlName=\"propertyName\" class=\"form-control\" maxlength=\"250\">\n        </div>\n        <div>\n            <label>Owner</label>\n            <textarea class=\"form-control\" formControlName=\"propertyOwner\" maxlength=\"250\"></textarea>\n        </div>\n        <div>\n            <label>Location</label>\n            <input type=\"text\" formControlName=\"propertyLocation\" maxlength=\"250\" class=\"form-control\">\n        </div>\n        <div>\n            <label>Price</label>\n            <input type=\"text\" formControlName=\"propertyPrice\" class=\"form-control\" maxlength=\"20\">\n        </div>\n        <p>&nbsp;</p>\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n       \n    </form>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'The Best Propierties...';\n}\n","<app-home></app-home>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './crud/home/home.component';\nimport { DetailsComponent } from './crud/details/details.component';\nimport { CreateComponent } from './crud/create/create.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    AppComponent,\n    DetailsComponent,\n    CreateComponent,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule\n  ],\n  bootstrap: [AppComponent] ,\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './crud/home/home.component';\nimport { DetailsComponent } from './crud/details/details.component';\nimport { CreateComponent } from './crud/create/create.component';\n\nconst routes: Routes = [\n{ path: 'crud', redirectTo: 'crud/home', pathMatch: 'full'},\n{ path: 'crud/home', component: HomeComponent },\n{ path: 'crud/details/:propertyId', component: DetailsComponent },\n{ path: 'crud/create', component: CreateComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div style=\"width: 500px; margin: auto;\">\n    <div *ngIf=\"currentPropierty\" class=\"edit-form\">\n      <h4>Detail {{currentPropierty.propertyName}}</h4>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"title\">Location</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"Location\"\n            [(ngModel)]=\"currentPropierty.propertyLocation\"\n            name=\"Location\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"Owner\">Owner</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"Owner\"\n            [(ngModel)]=\"currentPropierty.propertyOwner\"\n            name=\"Owner\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"Owner\">Price</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"Price\"\n            [(ngModel)]=\"currentPropierty.propertyPrice\"\n            name=\"Price\"\n          />\n      </div>  \n\n      </form>\n   \n      <button class=\"badge badge-danger mr-2\" (click)=\"delete()\">\n        Delete\n      </button>\n        <button\n        type=\"submit\"\n        class=\"badge badge-success\"\n        (click)=\"update()\"\n      >\n        Update\n      </button>\n      <p></p>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../crud.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StoreProperty } from '../store-property';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  currentPropierty!: StoreProperty;\n  message = '';\n\n  constructor(\n    private crudService: CrudService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.message = '';\n    this.getPropierty(this.route.snapshot.paramMap.get('propertyId'));\n    console.log(this.route.snapshot.paramMap.get('propertyId'));\n  }\n\n  getPropierty(propertyId: any): void {\n    this.crudService.getId(propertyId)\n      .subscribe(\n        itemPropierty => {\n          this.currentPropierty = itemPropierty;\n          console.log(itemPropierty);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  update(): void {\n    this.crudService.update(this.currentPropierty)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/crud']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  delete(): void {\n    this.crudService.delete(this.currentPropierty.propertyId)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/crud']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}